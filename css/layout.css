/* SECTION LAYOUT */

.grid-container {
    overflow-y: auto;
}

.grid-items .grid-item-number {
    display: block;
    margin-bottom: 0.5rem;
    color: hsl(36, 100%, 65%);
    font-size: 1.25em;
    font-weight: bold;
    text-align: center;
}

.grid-items-odd .grid-item-number {
    color: var(--illustration-purple, purple);
}

.grid-items {
    min-height: 5rem;
    padding: 1rem;
    color: hsl(270, 30%, 90%);
    background-color: var(--illustration-purple, purple);
    border-radius: 0.25rem;
}

.grid-items-odd {
    background-color: hsl(36, 70%, 65%);
    color: hsl(36, 100%, 18%);
}

.example-grid {
    margin-bottom: 2rem;
}

#grid-container-one {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* 1fr 1fr 1fr => 3 columns of 33% */
    grid-template-rows: 8rem auto minmax(auto, 50%);
    width: 100%;
    gap: 0.5rem;
    padding: 0.5rem;
    background-color: hsl(270, 30%, 90%);
    border-radius: 0.5rem;
}

#grid-container-one .grid-items:nth-child(1) {
    justify-self: start;
    align-self: start;
}

#grid-container-one .grid-items:nth-child(2) {
    justify-self: center;
    align-self: center;
}

#grid-container-one .grid-items:nth-child(3) {
    justify-self: end;
    align-self: end;
}

#grid-container-one .grid-items:nth-child(4) {
    justify-self: stretch;
    grid-column-start: 2;
}

#grid-container-two {
    --minColWidth: 30ch;
    resize: horizontal;
    overflow: scroll;
    width: 100%;
    padding: 0.5rem;
    background-color: hsl(270, 30%, 90%);
    border-radius: 0.5rem;
}

.grid-container-two {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--minColWidth), 1fr));
    gap: 0.5rem;
    margin-bottom: 0.5rem;
}

.grid-container-two:last-child {
    margin-bottom: 0;
}

#grid-container-three {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    width: 100%;
    gap: 0.5rem;
    padding: 0.5rem;
    background-color: hsl(270, 30%, 90%);
    border-radius: 0.5rem;
}

#grid-container-three .grid-items:nth-child(2) {
    order: 1;
    grid-column: 2 / span 2;
}

#grid-container-three .grid-items:nth-child(3) {
    grid-column: 1;
    grid-row: 2 / 4;
}

#grid-container-three .grid-items:nth-child(4) {
    grid-column: 3;
    grid-row: 2;
}

#grid-container-three .grid-items:nth-child(5) {
    grid-area: 1 / 1 / 2 / 3;
}

#grid-container-three .grid-items:nth-child(7) {
    order: 2;
    grid-column: span 3;
}

/* for simplicity, we start with the minimum size first */
/* that way, we don't have to, for bigger sizes and for some properties,
/* reset the value to "initial" */
/* we set the basics of the grid and then we add extra features on other sizes*/
#grid-container-four {
    display: grid;
    gap: 0.5rem;
    grid-template-areas: "header"
        "main"
        "sidebar"
        "."
        "."
        "footer";
    width: 100%;
    padding: 0.5rem;
    background-color: hsl(270, 30%, 90%);
    border-radius: 0.5rem;
}

#grid-container-four .grid-items:first-child {
    grid-area: header;
}

#grid-container-four .grid-items:nth-child(2) {
    grid-area: main;
}

#grid-container-four .grid-items:nth-child(3) {
    grid-area: sidebar;
}

#grid-container-four .grid-items:nth-child(4) {
    grid-row-start: sidebar-end;
    grid-column: 1 / 1;
}

#grid-container-four .grid-items:nth-child(5) {
    z-index: 1;
    grid-row-end: footer-start;
    grid-column: 1 / 1;
}

#grid-container-four .grid-items:last-child {
    grid-area: footer;
}

/* tablet layout */

@media (min-width: 768px) {
    #grid-container-four {
        grid-template-columns: auto 30%;
        /* 30% of the container for the sidebar */
        grid-template-rows: 1fr;
        grid-template-areas:
            "header header"
            "main sidebar"
            "main sidebar"
            ".  ."
            "footer footer"
            "footer footer"
            "footer footer";
    }

    #grid-container-four .grid-items:nth-child(4) {
        grid-row-start: main-end;
        grid-column: 1 / span 2;
    }

    #grid-container-four .grid-items:nth-child(5) {
        z-index: 1;
        grid-column: footer-start / span 1;
        grid-row: 7 / span 1;
    }
}

/* desktop layout */

@media (min-width: 1200px) {
    #grid-container-four {
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(4, 1fr);
        grid-template-areas: "header header header header"
            "main main . sidebar"
            "main main . sidebar"
            "footer footer footer footer";
    }

    #grid-container-four .grid-items:nth-child(4) {
        grid-area: 3 / 2;
    }

    #grid-container-four .grid-items:nth-child(5) {
        z-index: 1;
        grid-column: footer-start / span 2;
        grid-row-start: footer-start;
    }
}

/* SHAPE OUTSIDE */

.example-shape-outside-element {
    width: 8rem;
    aspect-ratio: 1;
    background-color: var(--illustration-pink, --pre-pink);
    float: left;
    margin-right: 2rem;
}

.example-shape-outside-element:first-of-type {
    border-radius: 50%;
    shape-outside: circle(50%);
}

.example-shape-outside-element:nth-of-type(2) {
    shape-outside: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
    /* the property only change the relationship of adjacent elements, 
    not the geometry of the element itself */
    /* to change the geometry of the element we use the clip-path property,
    with the same values */
    clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
}

.example-shape-outside-element:nth-of-type(3) {
    shape-outside: ellipse(35% 50% at 50% 50%);
    clip-path: ellipse(35% 50% at 50% 50%);
}

.example-shape-outside-content {
    opacity: 0.6;
    margin-bottom: 3rem;
}

/* DROP SHADOW SECTION */

.example-drop-shadow-vs {
    --shadow-color: hsl(150, 80%, 30%);
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    gap: 5rem;
    margin-bottom: 5rem;
}

.example-drop-shadow-vs:last-of-type {
    margin-bottom: 2rem;
}

.example-drop-shadow,
.example-box-shadow {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
}

.example-drop-shadow>div {
    width: 8rem;
    aspect-ratio: 1;
    background-color: var(--illustration-green, --pre-green);
    filter: drop-shadow(1rem -0.25rem 0.5rem var(--shadow-color));
}

.example-box-shadow>div {
    width: 8rem;
    aspect-ratio: 1;
    background-color: var(--illustration-green, --pre-green);
    box-shadow: 1rem -0.25rem 0.5rem var(--shadow-color);
}

.example-drop-shadow-circle,
.example-box-shadow-circle {
    border-radius: 50%;
}

.example-drop-shadow .example-drop-shadow-triangle,
.example-box-shadow .example-box-shadow-triangle {
    background-color: initial;
    background-image: linear-gradient(45deg, var(--illustration-green, --pre-green) 50%, rgba(255, 255, 255, 0) 50%);
}

.example-drop-shadow-clip,
.example-box-shadow-clip {
    /* With clipped element, we lose the shadow */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
}

.example-drop-shadow-container {
    /* With clipped element, the drop-shadow filter is applied on the parent element */
    filter: drop-shadow(1rem -0.25rem 0.5rem var(--shadow-color));
}

.example-drop-shadow-cross,
.example-box-shadow-cross {
    display: flex;
    flex-direction: column;
    width: 8rem;
    aspect-ratio: 1;
    background-color: var(--illustration-green, --pre-green);
    clip-path: polygon(20% 0%, 0% 20%, 30% 50%, 0% 80%, 20% 100%, 50% 70%, 80% 100%, 100% 80%, 70% 50%, 100% 20%, 80% 0%, 50% 30%);
}